{"version":3,"sources":["Filter.js","NewPersonForm.js","Persons.js","services/persons.js","Notification.js","App.js","index.js"],"names":["Filter","inputFields","handleInputChange","value","search","onChange","name","NewPersonForm","addPerson","inputNames","onSubmit","htmlFor","newName","id","number","newNumber","type","Person","person","deletePerson","className","onClick","Persons","personsToShow","map","key","baseUrl","personObject","axios","post","then","response","data","get","delete","put","Notification","message","isError","App","useState","persons","setPersons","setInputFields","setMessage","setIsError","useEffect","personService","intialPersons","event","target","filter","toLowerCase","includes","preventDefault","personToUpdate","samePerson","find","window","confirm","updatedPerson","updatedPersons","setTimeout","catch","newPerson","returnedPerson","concat","personToDelete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed06588e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({ inputFields, handleInputChange }) => {\n  return (\n    <form>\n      <div>\n        Filter person by name:{' '}\n        <input\n          value={inputFields.search}\n          onChange={handleInputChange}\n          name=\"search\"\n        />\n      </div>\n    </form>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nconst NewPersonForm = ({\n  addPerson,\n  handleInputChange,\n  inputFields,\n  inputNames,\n}) => {\n  return (\n    <div>\n      <h2>Add a new contact</h2>\n      <form onSubmit={addPerson}>\n        <div>\n          <label htmlFor={inputNames.name}>Name: </label>\n          <input\n            onChange={handleInputChange}\n            value={inputFields.newName}\n            name={inputNames.name}\n            id={inputNames.name}\n          />\n        </div>\n        <div>\n          <label htmlFor={inputNames.number}>Number: </label>\n          <input\n            onChange={handleInputChange}\n            value={inputFields.newNumber}\n            name={inputNames.number}\n            id={inputNames.number}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default NewPersonForm;\n","import React from 'react';\n\nconst Person = ({ person, deletePerson }) => {\n  return (\n    <li>\n      {person.name} {person.number}\n      <button className=\"delete-button\" onClick={() => deletePerson(person)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nconst Persons = ({ personsToShow, deletePerson }) => {\n  return (\n    <div>\n      <h2>Numbers</h2>\n      <ul>\n        {personsToShow.map((person) => (\n          <Person\n            key={person.name}\n            person={person}\n            deletePerson={deletePerson}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Persons;\n","import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst createPerson = (personObject) => {\n  const request = axios.post(baseUrl, personObject);\n  return request.then((response) => response.data);\n};\n\nconst getAllPerson = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst deletePerson = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nconst updatePerson = (personObject) => {\n  const request = axios.put(`${baseUrl}/${personObject.id}`, personObject);\n  return request.then((response) => response.data);\n};\n\nexport default { createPerson, getAllPerson, deletePerson, updatePerson };\n","import React from 'react';\n\nconst Notification = ({ message, isError }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className={isError ? 'error' : 'success'}>{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from 'react';\nimport Filter from './Filter';\nimport NewPersonForm from './NewPersonForm';\nimport Persons from './Persons';\nimport personService from './services/persons';\nimport Notification from './Notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [inputFields, setInputFields] = useState({\n    newName: '',\n    newNumber: '',\n    search: '',\n  });\n  const [message, setMessage] = useState(null);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    personService\n      .getAllPerson()\n      .then((intialPersons) => setPersons(intialPersons));\n  }, []);\n\n  const handleInputChange = (event) => {\n    setInputFields({\n      ...inputFields,\n      // Input names is passed down as props to lower components\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const updatePerson = (personToUpdate) => {\n    const confirmation = window.confirm(\n      `${personToUpdate.name} is already in the phonebook. Replace the old number with the new one?`\n    );\n\n    if (confirmation) {\n      personService\n        .updatePerson({\n          ...personToUpdate,\n          number: inputFields.newNumber,\n        })\n        .then((updatedPerson) => {\n          const updatedPersons = persons.map((person) =>\n            person.id === updatedPerson.id ? updatedPerson : person\n          );\n\n          setPersons(updatedPersons);\n          setInputFields({\n            ...inputFields,\n            newName: '',\n            newNumber: '',\n          });\n\n          setMessage(`${updatedPerson.name}'s number updated`);\n\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        })\n        .catch(() => {\n          setIsError(true);\n          setMessage(\n            `${personToUpdate.name}'s information is no longer on the server`\n          );\n\n          setTimeout(() => {\n            setIsError(false);\n            setMessage(null);\n          }, 5000);\n        });\n\n      return;\n    }\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    const samePerson = persons.find(\n      (person) => person.name === inputFields.newName\n    );\n\n    if (samePerson) {\n      return updatePerson(samePerson);\n    }\n\n    const newPerson = {\n      name: inputFields.newName,\n      number: inputFields.newNumber,\n    };\n\n    personService.createPerson(newPerson).then((returnedPerson) => {\n      setPersons(persons.concat(returnedPerson));\n      setInputFields({\n        ...inputFields,\n        newName: '',\n        newNumber: '',\n      });\n      setMessage(`Added ${returnedPerson.name}`);\n    });\n  };\n\n  const deletePerson = (personToDelete) => {\n    const confirmation = window.confirm(\n      `Are you sure you want to delete ${personToDelete.name}?`\n    );\n\n    if (confirmation) {\n      personService.deletePerson(personToDelete.id).then(() => {\n        const updatedPersons = persons.filter(\n          (person) => person.id !== personToDelete.id\n        );\n        setPersons(updatedPersons);\n      });\n    }\n  };\n\n  const personsToShow =\n    inputFields.search === ''\n      ? persons\n      : persons.filter((person) => {\n          return person.name\n            .toLowerCase()\n            .includes(inputFields.search.toLowerCase());\n        });\n\n  return (\n    <div className=\"phonebook\">\n      <h1>PhoneBook</h1>\n      <Notification message={message} isError={isError} />\n      <Filter inputFields={inputFields} handleInputChange={handleInputChange} />\n      <NewPersonForm\n        inputFields={inputFields}\n        handleInputChange={handleInputChange}\n        addPerson={addPerson}\n        // Input names are the keys in the inputFields state\n        inputNames={{ name: 'newName', number: 'newNumber' }}\n      />\n      <Persons personsToShow={personsToShow} deletePerson={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}